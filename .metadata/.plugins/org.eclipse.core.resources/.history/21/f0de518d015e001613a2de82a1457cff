package frontdoor;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

class Weather_Parsing {
	
	String locate;
	String time;
	
	String[] temp = new String[8];
	String[] wfKor = new String[8];
	String[] hour = new String[8];
	String[] pty = new String[8];
	String[] pop = new String[8];
	String[] ws = new String[8];
	String[] day = new String[8];
	String max_tmp;
	String min_tmp;
	String weather;
	
	String temp_day;
	String temp_pty;
	
	
	public Weather_Parsing()
	{

		try
		{
		 
			DocumentBuilderFactory f = DocumentBuilderFactory.newInstance();
			DocumentBuilder parser = f.newDocumentBuilder();
			Document xmldoc = null;
			
			String url = "http://www.kma.go.kr/wid/queryDFSRSS.jsp?zone=1162069500";
			xmldoc = parser.parse(url);
						
			Element root = xmldoc.getDocumentElement();
			
			Node category = root.getElementsByTagName("category").item(0);
			locate = category.getTextContent();
//			System.out.println(category.getTextContent());
			Node pubDate = root.getElementsByTagName("pubDate").item(0);
//			System.out.println("¹ßÇ¥½Ã°£ : " + pubDate.getTextContent());
			time = pubDate.getTextContent();
//			System.out.println();
					
			
			for(int i = 0 ; i < temp.length ; ++i)
			{
				Node xmlNode1 = root.getElementsByTagName("data").item(i);

				// hour
				Node node_hour = ((Element) xmlNode1).getElementsByTagName("hour").item(0);
			
				// temperature
				Node node_temp = ((Element) xmlNode1).getElementsByTagName("temp").item(0);
				
				// weather_korean
				Node node_wfkor = ((Element) xmlNode1).getElementsByTagName("wfKor").item(0);
				
				
				// precipitation
				Node node_pty = ((Element) xmlNode1).getElementsByTagName("pty").item(0);
				if(node_pty.getTextContent().equals("0"))
					temp_pty = "°­¼ö È®·ü ÀûÀ½";
				else if(node_pty.getTextContent().equals("1"))
					temp_pty = "ºñ";
				else if(node_pty.getTextContent().equals("2") || node_pty.equals("3"))
					temp_pty = "ºñ³ª ´«";
				else if(node_pty.getTextContent().equals("4"))
					temp_pty = "´«";
				
				
				// percent precipitation
				Node node_pop = ((Element) xmlNode1).getElementsByTagName("pop").item(0);
				
				// wind speed
				Node node_ws = ((Element) xmlNode1).getElementsByTagName("ws").item(0);
				
				//day
				Node node_day = ((Element) xmlNode1).getElementsByTagName("day").item(0);
				if(node_day.getTextContent().equals("0"))
					temp_day = "¿À´Ã";
				else if(node_day.getTextContent().equals("1"))
					temp_day = "³»ÀÏ";
				else if(node_day.getTextContent().equals("2"))
					temp_day = "¸ð·¹";
				
				
				// store weather
				if(temp_day.equals("¿À´Ã"))
				{
					if(temp_pty.equals("ºñ"))
					{
						if(weather.equals("´«") && weather.equals("ºñ³ª ´«"))
							weather = "ºñ³ª ´«";
						else
						{
							weather = "ºñ";
						}
					}
					else if(temp_pty.equals("´«"))
					{
						if(weather.equals("ºñ") && weather.equals("ºñ³ª ´«"))
							weather = "ºñ³ª ´«";
						else
						{
							weather = "´«";
						}
					}
						
					
				}
				
				
				// max, min temp
				Node node_max = ((Element) xmlNode1).getElementsByTagName("tmx").item(0);
				Node node_min = ((Element) xmlNode1).getElementsByTagName("tmn").item(0);

				
				if(!node_max.getTextContent().equals("-999.0") && temp_day.equals("¿À´Ã"))
				{
					max_tmp = node_max.getTextContent();
				}
				if(!node_min.getTextContent().equals("-999.0") && temp_day.equals("¿À´Ã"))
				{
					min_tmp = node_min.getTextContent();
				}
				
//				System.out.println(temp_day);
//				System.out.println(node_hour.getTextContent() + "½Ã");
//				System.out.println("¼·¾¾ : " + node_temp.getTextContent());
//				System.out.println(node_wfkor.getTextContent());
//				System.out.println(temp_pty);
//				System.out.println("°­¼öÈ®·ü : " + node_pop.getTextContent() + " %");
//				System.out.println("Ç³¼Ó : " + node_ws.getTextContent() + " m/s");
//				System.out.println(max_tmp);
//				System.out.println(min_tmp);
//				System.out.println();
				
				

				day[i] = temp_day;
				hour[i] = node_hour.getTextContent() + "½Ã";		
				temp[i] = node_temp.getTextContent();
				wfKor[i] = node_wfkor.getTextContent();
				pty[i] = temp_pty;
				pop[i] = node_pop.getTextContent();
				ws[i] = node_ws.getTextContent();
				
			}
					
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
	
	// ±âÁØ Áö¿ª, ¹ßÇ¥ ½Ã°£
	public String get_locate_time()
	{
		return locate+"//"+time;
	}

	// ¿À´ÃÀÎÁö ³»ÀÏÀÎÁö
	public String[] get_day()
	{
		return day;
	}
	
	// ½Ã°£
	public String[] get_hour()
	{
		return hour;
	}
	
	// ¿Âµµ
	public String[] get_temp()
	{
		return temp;
	}
	
	// ³¯¾¾(ÇÑ±¹¾î)
	public String[] get_wfKor()
	{
		return wfKor;
	}
	
	// ³¯¾¾ (ºñ,´« µî)
	public String[] get_pty()
	{
		return pty;
	}
	
	// °­¼ö È®·ü
	public String[] get_pop()
	{
		return pop;
	}
	
	// Ç³¼Ó
	public String[] get_ws()
	{
		return ws;
	}
	
//	public static void main(String[] args)
//	{
//		Weather_Parsing temp = new Weather_Parsing();
//	}
}
